{"version":3,"sources":["img/chip1.jpg","img/chip1green.jpg","img/chip1red.jpg","img/chip1black.jpg","img/chip5.jpg","img/chip5red.jpg","img/chip5green.jpg","img/chip5black.jpg","img/chip10.jpg","img/chip10red.jpg","img/chip10green.jpg","img/chip10black.jpg","img/chip25.jpg","img/chip25red.jpg","img/chip25green.jpg","img/chip25black.jpg","img/chip100.jpg","img/chip100red.jpg","img/chip100green.jpg","img/chip100black.jpg","img/wheel.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","state","playerAmount","betMap","spinResult","betResult","chipSelected","currentTotalBet","lastSpin","lastResult","lastWinMessages","selectBetHandler","bet","Object","assign","_this","totalBet","remaining","forEach","obj","value","currentBet","setState","selectChipHandler","chip","populateBetsHandler","betMapArray","numberBets","i","push","Slot","this","concat","length","betInstance","componentDidMount","clearBetsHandler","spinWheelHandler","startingAmount","winnings","winMessages","spin","Math","floor","random","activeBets","filter","slot","console","log","topRow","middleRow","bottomRow","red","black","even","odd","firstHalf","secondHalf","firstThird","secondThird","thirdThird","indexOf","difference","_this2","numbers","react_default","a","createElement","className","App_Stats","App_Table","betSelected","onClick","src","chip100","chip25","chip10","chip5","chip1","Wheel","map","num","App_ResultBall","number","Component","Stats","props","redBack","blackBack","greenBack","message","Table","topRowBets","item","current","middleRowBets","bottomRowBets","sideLineTop","sideLineTopBets","sideLineBot","sideLineBotBets","zeroLineBets","App_Slot","betValue","betAmount","index","key","ResultBall","classname","chip1Display","chip5Display","chip10Display","chip25Display","chip100Display","green","chip1green","alt","chip1red","chip1black","chip5green","chip5red","chip5black","chip10green","chip10red","chip10black","chip25green","chip25red","chip25black","chip100green","chip100red","chip100black","redValue","blackValue","greenSmallValue","greenMiddleValue","greenLargeValue","zeroBetValue","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c67aa572.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chip1.d358a09e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip1green.7603b74f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip1red.31f42ff0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip1black.d94b94a5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip5.d91db34e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip5red.6696312a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip5green.2021e0ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip5black.04d53e97.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip10.34a41a77.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip10red.af021cff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip10green.501dd4c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip10black.9ae6163b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip25.60933c3e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip25red.dd16d7ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip25green.40f1a5b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip25black.c2ef32ce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip100.b15954da.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip100red.5a1c5531.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip100green.5885862f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip100black.85b84fa2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wheel.33fa3d65.jpg\";","import React, { Component } from 'react';\nimport './App.css';\n\nimport chip1 from './img/chip1.jpg';\nimport chip1green from './img/chip1green.jpg';\nimport chip1red from './img/chip1red.jpg';\nimport chip1black from './img/chip1black.jpg';\nimport chip5 from './img/chip5.jpg';\nimport chip5red from './img/chip5red.jpg';\nimport chip5green from './img/chip5green.jpg';\nimport chip5black from './img/chip5black.jpg';\nimport chip10 from './img/chip10.jpg';\nimport chip10red from './img/chip10red.jpg';\nimport chip10green from './img/chip10green.jpg';\nimport chip10black from './img/chip10black.jpg';\nimport chip25 from './img/chip25.jpg';\nimport chip25red from './img/chip25red.jpg';\nimport chip25green from './img/chip25green.jpg';\nimport chip25black from './img/chip25black.jpg';\nimport chip100 from './img/chip100.jpg';\nimport chip100red from './img/chip100red.jpg';\nimport chip100green from './img/chip100green.jpg';\nimport chip100black from './img/chip100black.jpg';\n\nimport Wheel from './img/wheel.jpg';\n\nclass App extends Component {\n\n  state = {\n    playerAmount: 500,\n    betMap: [],\n    spinResult: \"\",\n    betResult: \"\",\n    chipSelected: null,\n    currentTotalBet: 0,\n    lastSpin: null,\n    lastResult: null,\n    lastWinMessages: []\n  }\n\n  selectBetHandler = (bet) => {\n      let betMap = Object.assign([], this.state.betMap);\n      let chipSelected = this.state.chipSelected;\n      let playerAmount = this.state.playerAmount;\n      let totalBet = this.state.currentTotalBet;\n      let remaining = playerAmount - totalBet;\n\n      betMap.forEach(function(obj){\n        if(obj.value === bet && obj.currentBet === null && remaining >= chipSelected){\n          if(playerAmount >= chipSelected){\n            obj.currentBet = chipSelected;\n            totalBet += chipSelected;\n          }\n        } else if(obj.value === bet && obj.currentBet !== chipSelected){\n          totalBet-=obj.currentBet;\n          obj.currentBet = null;\n          \n        } else if(obj.value === bet && obj.currentBet === chipSelected){\n          obj.currentBet = null;\n          totalBet-= chipSelected;\n        }\n      })\n   \n    \n    this.setState(()=>({betMap, currentTotalBet: totalBet, playerAmount: playerAmount}));\n  }\n\n \n\n  selectChipHandler = (bet) => {\n    let chip;\n    if(this.state.chipSelected === null || this.state.chipSelected !==bet){\n      chip = bet;\n    } else if(this.state.chipSelected === bet){\n      chip = null;\n    } \n    this.setState(()=>({chipSelected: chip}));\n  }\n\n  populateBetsHandler = () => {\n    //define arrays for bet label, and object array\n    let betMapArray = [];\n    let numberBets = [];\n    let betMap = [];\n    \n    //create array of all bet labels\n    for(let i = 0; i<=36 ; i++){\n      numberBets.push(i);\n    }\n    let wordBets = ['3rd row', '2nd row', '1st row', '1st 12', '2nd 12', '3rd 12', '1-18', 'EVEN', 'Red', 'Black', 'ODD', '19-36'];\n    betMapArray = numberBets.concat(wordBets);\n    \n    //constructor for bet slot objects, push to array\n    function Slot(value, currentBet){\n      this.value = value;\n      this.currentBet = currentBet;\n    }\n    for(let i=0; i<betMapArray.length;i++){\n        let betInstance = new Slot(betMapArray[i], null);\n        betMap.push(betInstance);\n    }\n\n    this.setState(()=>({betMap, chipSelected: null}));\n  }\n\n  componentDidMount = () => {\n    this.populateBetsHandler();\n  }\n\n  clearBetsHandler = () => {\n    this.setState(()=>({currentTotalBet: 0}));\n    this.populateBetsHandler();\n  }\n\n  spinWheelHandler = () => {\n      let playerAmount = this.state.playerAmount;\n      let startingAmount = this.state.playerAmount;\n      let totalBet = this.state.currentTotalBet;\n      let betMap = this.state.betMap;\n      let winnings = 0;\n      let winMessages = [];\n\n      let spin = Math.floor(Math.random()*37);\n      let activeBets = betMap.filter((slot)=>slot.currentBet);\n      \n      if(totalBet > playerAmount){\n        return console.log('not enough to play');\n      } \n\n      playerAmount-=totalBet;\n        \n      let topRow = [3,6,9,12,15,18,21,24,27,30,33,36, '3rd row'];\n      let middleRow = [2,5,8,11,14,17,20,23,26,29,32,35, '2nd row'];\n      let bottomRow = [1,4,7,10,13,16,19,22,25,28,31,34, '1st row'];\n      let red = [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36];\n      let black = [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35];\n      let even = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36];\n      let odd = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35];\n      let firstHalf = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n      let secondHalf = [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36];\n      let firstThird = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n      let secondThird = [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24];\n      let thirdThird = [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36];\n\n      activeBets.forEach((bet)=>{\n        \n        if(bet.value > 0 && bet.value === spin){\n          winnings += (36*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*36} on ${bet.value}`)\n        } else if(bet.value === 0 && spin === 0){\n          winnings += (36*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*36} on ${bet.value}`);\n        } else if(bet.value === '3rd row' && topRow.indexOf(spin)>-1){\n          winnings += (3*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*3} on ${bet.value}`);\n        } else if(bet.value === '2nd row' && middleRow.indexOf(spin)>-1){\n          winnings += (3*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*3} on ${bet.value}`);\n        } else if(bet.value === '1st row' && bottomRow.indexOf(spin)>-1){\n          winnings += (3*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*3} on ${bet.value}`);\n        } else if(bet.value === 'Red' && red.indexOf(spin)>-1){\n          winnings += (2*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*2} on ${bet.value}`);\n        } else if(bet.value === 'Black' && black.indexOf(spin)>-1){\n          winnings += (2*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*2} on ${bet.value}`);\n        } else if(bet.value === 'EVEN' && even.indexOf(spin)>-1){\n          winnings += (2*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*2} on ${bet.value}`);\n        } else if(bet.value === 'ODD' && odd.indexOf(spin)>-1){\n          winnings += (2*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*2} on ${bet.value}`);\n        } else if(bet.value === \"1st 12\" && firstThird.indexOf(spin)>-1){\n          winnings += (3*(bet.currentBet));\n          winMessages.push(`You won $${(bet.currentBet)*3} on ${bet.value}`);\n        } else if(bet.value === \"2nd 12\" && secondThird.indexOf(spin)>-1){\n          winnings += (3*(bet.currentBet));\n          winMessages.push(`You won $${(bet.currentBet)*3} on ${bet.value}`);\n        } else if(bet.value === \"3rd 12\" && thirdThird.indexOf(spin)>-1){\n          winnings += (3*(bet.currentBet));\n          winMessages.push(`You won $${(bet.currentBet)*3} on ${bet.value}`);\n        } else if(bet.value === '1-18' && firstHalf.indexOf(spin)>-1){\n          winnings += (2*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*2} on ${bet.value}`);\n        } else if(bet.value === '19-36' && secondHalf.indexOf(spin)>-1){\n          winnings += (2*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*2} on ${bet.value}`);\n        } \n        \n        playerAmount+=winnings;\n        let difference = playerAmount-startingAmount;\n        winnings = 0;\n        \n\n        this.setState(()=>({playerAmount, lastSpin: spin, lastResult: difference, lastWinMessages: winMessages}))\n        \n        \n      });\n  }\n\n  render() {\n   \n\n   let numbers = [];\n   for(let i = 0 ; i <37; i++) {numbers.push(i)};\n\n   \n\n    return (\n      <div className=\"App\">\n        \n        <h1>Roulette App</h1>\n        \n        <div className=\"screen\">\n          <div className=\"game\">\n            <Stats\n              playerAmount = {this.state.playerAmount}\n              currentTotalBet = {this.state.currentTotalBet}\n              lastResult = {this.state.lastResult}\n              lastWinMessages = {this.state.lastWinMessages}\n              lastSpin = {this.state.lastSpin}\n            />\n            <Table \n              lastSpin = {this.state.lastSpin}\n              betSelected = {this.state.betSelected}\n              selectBetHandler = {this.selectBetHandler}\n              betMap = {this.state.betMap}\n\n            />\n            <div className=\"bet__options\">\n          \n        \n              <div className={this.state.chipSelected===100 ? \"bet__chips bet__selected\" : \"bet__chips\"} onClick={()=>this.selectChipHandler(100)}><img className=\"bet__image\" src={chip100}/></div>\n              <div className={this.state.chipSelected===25 ? \"bet__chips bet__selected\" : \"bet__chips\"} onClick={()=>this.selectChipHandler(25)}><img className=\"bet__image\" src={chip25}/></div>\n              <div className={this.state.chipSelected===10 ? \"bet__chips bet__selected\" : \"bet__chips\"} onClick={()=>this.selectChipHandler(10)}><img className=\"bet__image\" src={chip10}/></div>\n              <div className={this.state.chipSelected===5 ? \"bet__chips bet__selected\" : \"bet__chips\"} onClick={()=>this.selectChipHandler(5)}><img className=\"bet__image\" src={chip5}/></div>\n              <div className={this.state.chipSelected===1 ? \"bet__chips bet__selected\" : \"bet__chips\"} onClick={()=>this.selectChipHandler(1)}><img className=\"bet__image\" src={chip1}/></div>\n            </div>\n            <button className=\"button\" onClick={()=>this.spinWheelHandler()}>Spin Roulette Wheel</button>\n            <button className=\"button\" onClick={()=>this.clearBetsHandler()}>Clear all bets</button>\n        \n          </div>\n          <div className=\"wheel__display\">\n            <img className=\"wheel__image\" src={Wheel} />\n            {numbers.map((num)=><ResultBall\n              number = {num}\n              lastSpin = {this.state.lastSpin}\n              \n            />)}\n          </div>\n          \n        </div>\n        \n      </div>\n    ); \n  }\n}\n\nconst Stats = (props) => {\n  let red = [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36];\n   let black = [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35];\n     \n   let redBack = (red.indexOf(props.lastSpin)>-1) ?\n     <div className=\"red spin-result\">{props.lastSpin}</div> : null \n     \n   let blackBack = (black.indexOf(props.lastSpin)>-1) ?\n     <div className=\"black spin-result\">{props.lastSpin}</div> : null\n\n    let greenBack = (props.lastSpin===0) ?\n     <div className=\"green spin-result\">{props.lastSpin}</div> : null\n\n    let spin;\n    if(props.lastResult === 0){\n      spin = (<span className=\"result__black\">${props.lastResult}</span>)\n    } else if(props.lastResult > 0){\n      spin = (<span className=\"result__green\">${props.lastResult}</span>)\n    } else if(props.lastResult < 0 ){\n      spin = (<span className=\"result__red\">${props.lastResult}</span>)\n    }\n    \n  return(\n      <div className=\"stats__panel\">\n        <div className=\"stats__display\">\n          <p>Player: ${props.playerAmount}</p>\n          <p>Current Bet: ${props.currentTotalBet}</p>\n        </div>\n        <div className=\"stats__spin\">\n          <p>Last Spin {spin}</p>\n          {redBack}{blackBack}{greenBack}\n        </div>\n        <div className=\"stats__result\">\n          <p>Results:</p>\n          {props.lastWinMessages.map((message)=><p>{message}</p>)}\n        </div>\n      </div>\n    \n  );\n}\n\n\nconst Table = (props) => {\n  let topRow = [3,6,9,12,15,18,21,24,27,30,33,36, \"3rd row\"];\n    let topRowBets = topRow.map((item)=> {\n      let betMap = props.betMap;\n      let current = null;\n      betMap.forEach((bet)=>{\n        if(bet.value === item){\n          current = bet.currentBet;\n        }\n      })\n      return current;\n    })\n\n    let middleRow = [2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, '2nd row'];\n    let middleRowBets = middleRow.map((item)=> {\n      let betMap = props.betMap;\n      let current = null;\n      betMap.forEach((bet)=>{\n        if(bet.value === item){\n          current = bet.currentBet;\n        }\n      })\n      return current;\n    })\n\n    let bottomRow = [1,4,7, 10, 13, 16, 19, 22, 25, 28, 31, 34, '1st row'];\n    let bottomRowBets = bottomRow.map((item)=> {\n      let betMap = props.betMap;\n      let current = null;\n      betMap.forEach((bet)=>{\n        if(bet.value === item){\n          current = bet.currentBet;\n        }\n      })\n      return current;\n    })\n\n    let sideLineTop = ['1st 12', '2nd 12', '3rd 12'];\n    let sideLineTopBets = sideLineTop.map((item)=> {\n      let betMap = props.betMap;\n      let current = null;\n      betMap.forEach((bet)=>{\n        if(bet.value === item){\n          current = bet.currentBet;\n        }\n      })\n      return current;\n    })\n\n    let sideLineBot = ['1-18', 'EVEN', 'Red', 'Black', 'ODD', '19-36'];\n    let sideLineBotBets = sideLineBot.map((item)=> {\n      let betMap = props.betMap;\n      let current = null;\n      betMap.forEach((bet)=>{\n        if(bet.value === item){\n          current = bet.currentBet;\n        }\n      })\n      return current;\n    })\n\n    let zeroLine = [0];\n    let zeroLineBets = zeroLine.map((item)=> {\n      let betMap = props.betMap;\n      let current = null;\n      betMap.forEach((bet)=>{\n        if(bet.value === item){\n          current = bet.currentBet;\n        }\n      })\n      return current;\n    })\n    \n  \n  let red = [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36];\n  let black = [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35];\n    \n  let redBack = (red.indexOf(props.lastSpin)>-1) ?\n    <div className=\"red spin-result\">{props.lastSpin}</div> : null \n    \n  let blackBack = (black.indexOf(props.lastSpin)>-1) ?\n    <div className=\"black spin-result\">{props.lastSpin}</div> : null\n  \n \n  return(\n    <div>\n      <div className=\"board\">\n          \n\n          <div>\n            <Slot \n              betValue={0}\n              betSelected = {props.betSelected}\n              selectBetHandler = {props.selectBetHandler}\n              betAmount = {zeroLineBets[0]}\n            />\n          </div>\n          <div className=\"topthree__rows\">\n            <div className=\"top-row\">\n                {topRow.map((bet, index)=><Slot \n                  key={bet}\n                  betValue = {bet}\n                  betSelected = {props.betSelected}\n                  selectBetHandler = {props.selectBetHandler}\n                  betAmount= {topRowBets[index]}\n                />)}\n              </div>\n              <div className=\"middle-row\">\n                {middleRow.map((bet, index)=><Slot \n                  key={bet}\n                  betValue = {bet}\n                  betSelected = {props.betSelected}\n                  selectBetHandler = {props.selectBetHandler}\n                  betAmount= {middleRowBets[index]}\n                />)}\n              </div>\n              <div className=\"bottom-row\">\n                {bottomRow.map((bet, index)=><Slot \n                  key={bet}\n                  betValue = {bet}\n                  betSelected = {props.betSelected}\n                  selectBetHandler = {props.selectBetHandler}\n                  betAmount= {bottomRowBets[index]}\n                />)}\n              </div>\n          </div>\n              \n              <div className=\"side-line-1\">\n                {sideLineTop.map((bet, index)=><Slot \n                  key={bet}\n                  betValue = {bet}\n                  betSelected = {props.betSelected}\n                  selectBetHandler = {props.selectBetHandler}\n                  betAmount= {sideLineTopBets[index]}\n                />)}\n              </div>\n              <div className=\"side-line-2\">\n              {sideLineBot.map((bet, index)=><Slot \n                  key={bet}\n                  betValue = {bet}\n                  betSelected = {props.betSelected}\n                  selectBetHandler = {props.selectBetHandler}\n                  betAmount= {sideLineBotBets[index]}\n                />)}\n              </div>\n            </div>\n    </div>\n  );\n}\n\nconst ResultBall = (props) => {\n  let classname;\n  if(props.lastSpin === props.number){\n    classname = `ball ball__${props.number}`;\n  }\n  \n  \n  return(\n    <div className={classname}>\n      \n    </div>\n  );\n}\n\nconst Slot = (props)=>{\n  const red = [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36];\n  const black = [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35];\n  let greenSmall = ['3rd row', '2nd row', '1st row'];\n  let greenMiddle = ['1-18', 'EVEN', 'Red', 'Black', 'ODD', '19-36'];\n  let greenLarge = ['1st 12', '2nd 12', '3rd 12'];\n  let green = [0, '3rd row', '2nd row', '1st row', '1-18', 'EVEN', 'Red', 'Black', 'ODD', '19-36', '1st 12', '2nd 12', '3rd 12']\n\n  let chip1Display, chip5Display, chip10Display, chip25Display, chip100Display;\n\n  if(green.indexOf(props.betValue)>-1 && props.betAmount === 1){\n    chip1Display = (<img className=\"chip__small\" src={chip1green} alt=\"chip1\"/>)\n  } else if(red.indexOf(props.betValue)>-1 && props.betAmount === 1){\n    chip1Display = (<img className=\"chip__small\" src={chip1red} alt=\"chip1\"/>)\n  } else if(black.indexOf(props.betValue)>-1 && props.betAmount === 1){\n    chip1Display = (<img className=\"chip__small\" src={chip1black} alt=\"chip1\"/>)\n  }\n\n  if(green.indexOf(props.betValue)>-1 && props.betAmount === 5){\n    chip5Display = (<img className=\"chip__small\" src={chip5green} alt=\"chip1\"/>)\n  } else if(red.indexOf(props.betValue)>-1 && props.betAmount === 5){\n    chip5Display = (<img className=\"chip__small\" src={chip5red} alt=\"chip1\"/>)\n  } else if(black.indexOf(props.betValue)>-1 && props.betAmount === 5){\n    chip5Display = (<img className=\"chip__small\" src={chip5black} alt=\"chip1\"/>)\n  }\n\n  if(green.indexOf(props.betValue)>-1 && props.betAmount === 10){\n    chip10Display = (<img className=\"chip__small\" src={chip10green} alt=\"chip1\"/>)\n  } else if(red.indexOf(props.betValue)>-1 && props.betAmount === 10){\n    chip10Display = (<img className=\"chip__small\" src={chip10red} alt=\"chip1\"/>)\n  } else if(black.indexOf(props.betValue)>-1 && props.betAmount === 10){\n    chip10Display = (<img className=\"chip__small\" src={chip10black} alt=\"chip1\"/>)\n  }\n\n  if(green.indexOf(props.betValue)>-1 && props.betAmount === 25){\n    chip25Display = (<img className=\"chip__small\" src={chip25green} alt=\"chip1\"/>)\n  } else if(red.indexOf(props.betValue)>-1 && props.betAmount === 25){\n    chip25Display = (<img className=\"chip__small\" src={chip25red} alt=\"chip1\"/>)\n  } else if(black.indexOf(props.betValue)>-1 && props.betAmount === 25){\n    chip25Display = (<img className=\"chip__small\" src={chip25black} alt=\"chip1\"/>)\n  }\n\n  if(green.indexOf(props.betValue)>-1 && props.betAmount === 100){\n    chip100Display = (<img className=\"chip__small\" src={chip100green} alt=\"chip1\"/>)\n  } else if(red.indexOf(props.betValue)>-1 && props.betAmount === 100){\n    chip100Display = (<img className=\"chip__small\" src={chip100red} alt=\"chip1\"/>)\n  } else if(black.indexOf(props.betValue)>-1 && props.betAmount === 100){\n    chip100Display = (<img className=\"chip__small\" src={chip100black} alt=\"chip1\"/>)\n  }\n\n  let redValue = (red.indexOf(props.betValue)>-1) ?\n  <div className={props.betSelected===props.betValue ? \"selected board-number red\" : \"board-number red\"} onClick={()=>props.selectBetHandler(props.betValue)}>\n  {props.betValue}{chip1Display}{chip5Display}{chip10Display}{chip25Display}{chip100Display}\n  </div> : null\n\n  let blackValue = (black.indexOf(props.betValue)>-1) ?\n  <div className={props.betSelected===props.betValue ? \"selected board-number black\" : \"board-number black\"} onClick={()=>props.selectBetHandler(props.betValue)}>\n  {props.betValue}{chip1Display}{chip5Display}{chip10Display}{chip25Display}{chip100Display}\n  </div> : null\n\n  let greenSmallValue = (greenSmall.indexOf(props.betValue)>-1) ?\n  <div className={props.betSelected===props.betValue ? \"selected row-bet\" : \"row-bet\"} onClick={()=>props.selectBetHandler(props.betValue)}>\n  {props.betValue}{chip1Display}{chip5Display}{chip10Display}{chip25Display}{chip100Display}\n  </div> : null\n\n  let greenMiddleValue = (greenMiddle.indexOf(props.betValue)>-1) ?\n  <div className={props.betSelected===props.betValue ? \"selected one-of-two-bet\" : \"one-of-two-bet\"} onClick={()=>props.selectBetHandler(props.betValue)}>\n  {props.betValue}{chip1Display}{chip5Display}{chip10Display}{chip25Display}{chip100Display}\n  </div> : null\n\n  let greenLargeValue = (greenLarge.indexOf(props.betValue)>-1) ?\n  <div className={props.betSelected===props.betValue ? \"selected thirds-bet\" : \"thirds-bet\"} onClick={()=>props.selectBetHandler(props.betValue)}>\n  {props.betValue}{chip1Display}{chip5Display}{chip10Display}{chip25Display}{chip100Display}\n  </div> : null\n\n  let zeroBetValue = (props.betValue === 0 || props.betValue === '0') ?\n  <div className={props.betSelected===props.betValue ? \"selected__zero zero__bet\" : \"zero__bet\"} onClick={()=>props.selectBetHandler(props.betValue)}>\n  {props.betValue}{chip1Display}{chip5Display}{chip10Display}{chip25Display}{chip100Display}\n  </div> : null\n\n\n  return(\n    <div className=\"board__chips\">\n      {redValue}{blackValue}{greenSmallValue}{greenMiddleValue}{greenLargeValue}{zeroBetValue}\n      \n    </div>\n  );\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}