{"version":3,"sources":["img/chip1green.jpg","img/chip1red.jpg","img/chip1black.jpg","img/chip5red.jpg","img/chip5green.jpg","img/chip5black.jpg","img/chip10red.jpg","img/chip10green.jpg","img/chip10black.jpg","img/chip25red.jpg","img/chip25green.jpg","img/chip25black.jpg","img/chip100red.jpg","img/chip100green.jpg","img/chip100black.jpg","img/chip1background.jpg","img/chip5background.jpg","img/chip10background.jpg","img/chip25background.jpg","img/chip100background.jpg","img/wheel.jpg","Stats/Stats.js","Slot/Slot.js","Table/Table.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Stats","props","spin","redBack","indexOf","lastSpin","react_default","a","createElement","className","blackBack","greenBack","lastResult","playerAmount","currentTotalBet","lastWinMessages","map","message","Slot","chip1Display","chip5Display","chip10Display","chip25Display","chip100Display","red","black","green","betValue","betAmount","src","chip1green","alt","chip1red","chip1black","chip5green","chip5red","chip5black","chip10green","chip10red","chip10black","chip25green","chip25red","chip25black","chip100green","chip100red","chip100black","redValue","betSelected","onClick","selectBetHandler","blackValue","greenSmallValue","greenMiddleValue","greenLargeValue","zeroBetValue","Table","topRow","topRowBets","item","betMap","current","forEach","bet","value","currentBet","middleRow","middleRowBets","bottomRow","bottomRowBets","sideLineTop","sideLineTopBets","sideLineBot","sideLineBotBets","zeroLineBets","src_Slot_Slot","index","key","App","state","spinResult","betResult","chipSelected","Object","assign","_this","totalBet","remaining","obj","setState","selectChipHandler","chip","populateBetsHandler","betMapArray","numberBets","i","push","this","concat","length","betInstance","componentDidMount","clearBetsHandler","spinWheelHandler","startingAmount","winnings","winMessages","Math","floor","random","activeBets","filter","slot","console","log","even","odd","firstHalf","secondHalf","firstThird","secondThird","thirdThird","difference","_this2","numbers","src_Stats_Stats","src_Table_Table","chip100","chip25","chip10","chip5","chip1","Wheel","num","App_ResultBall","number","Component","ResultBall","classname","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.041689c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chip1green.7603b74f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip1red.31f42ff0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip1black.d94b94a5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip5red.6696312a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip5green.2021e0ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip5black.04d53e97.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip10red.af021cff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip10green.501dd4c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip10black.9ae6163b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip25red.dd16d7ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip25green.40f1a5b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip25black.c2ef32ce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip100red.5a1c5531.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip100green.5885862f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip100black.85b84fa2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip1background.f3a933ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip5background.6cdf002a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip10background.d93c696e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip25background.2e47beb2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chip100background.e8efcf3f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wheel.13059766.jpg\";","import React from 'react';\r\n\r\nconst Stats = (props) => {\r\n    let red = [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36];\r\n     let black = [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35];\r\n       \r\n     let redBack = (red.indexOf(props.lastSpin)>-1) ?\r\n       <div className=\"red spin-result\">{props.lastSpin}</div> : null \r\n       \r\n     let blackBack = (black.indexOf(props.lastSpin)>-1) ?\r\n       <div className=\"black spin-result\">{props.lastSpin}</div> : null\r\n  \r\n      let greenBack = (props.lastSpin===0) ?\r\n       <div className=\"green spin-result\">{props.lastSpin}</div> : null\r\n  \r\n      let spin;\r\n      if(props.lastResult === 0){\r\n        spin = (<div className=\"result__black\">${props.lastResult}</div>)\r\n      } else if(props.lastResult > 0){\r\n        spin = (<div className=\"result__green\">${props.lastResult}</div>)\r\n      } else if(props.lastResult < 0 ){\r\n        spin = (<div className=\"result__red\">${props.lastResult}</div>)\r\n      }\r\n      \r\n    return(\r\n        <div className=\"stats__panel\">\r\n          <div className=\"stats__display\">\r\n            <p><span className=\"stats__label stats__label--player\">Player:</span> <span className=\"stats__result--amount\">${props.playerAmount}</span></p>\r\n            <p><span className=\"stats__label\">Current Bet:</span> <span className=\"stats__result--amount\">${props.currentTotalBet}</span></p>\r\n          </div>\r\n          <div className=\"stats__spin\">\r\n            <div className=\"stats__spin--label\"><span className=\"stats__result--label\">Last Spin</span> <div className=\"stats__amount--label\">{spin}</div></div>\r\n            <div className=\"stats__result--display\">{redBack}{blackBack}{greenBack}</div>\r\n          </div>\r\n          <div className=\"stats__result\">\r\n            <p className=\"stats__result--label\">Results:</p>\r\n            {props.lastWinMessages.map((message)=><p className=\"stats__result--message\">{message}</p>)}\r\n          </div>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n  \r\n  export default Stats;","import React from 'react';\r\n\r\nimport chip1green from '../img/chip1green.jpg';\r\nimport chip1red from '../img/chip1red.jpg';\r\nimport chip1black from '../img/chip1black.jpg';\r\n\r\nimport chip5red from '../img/chip5red.jpg';\r\nimport chip5green from '../img/chip5green.jpg';\r\nimport chip5black from '../img/chip5black.jpg';\r\n\r\nimport chip10red from '../img/chip10red.jpg';\r\nimport chip10green from '../img/chip10green.jpg';\r\nimport chip10black from '../img/chip10black.jpg';\r\n\r\nimport chip25red from '../img/chip25red.jpg';\r\nimport chip25green from '../img/chip25green.jpg';\r\nimport chip25black from '../img/chip25black.jpg';\r\n\r\nimport chip100red from '../img/chip100red.jpg';\r\nimport chip100green from '../img/chip100green.jpg';\r\nimport chip100black from '../img/chip100black.jpg';\r\n\r\n\r\nconst Slot = (props)=>{\r\n    const red = [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36];\r\n    const black = [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35];\r\n    let greenSmall = ['3rd row', '2nd row', '1st row'];\r\n    let greenMiddle = ['1-18', 'EVEN', 'Red', 'Black', 'ODD', '19-36'];\r\n    let greenLarge = ['1st 12', '2nd 12', '3rd 12'];\r\n    let green = [0, '3rd row', '2nd row', '1st row', '1-18', 'EVEN', 'Red', 'Black', 'ODD', '19-36', '1st 12', '2nd 12', '3rd 12']\r\n  \r\n    let chip1Display, chip5Display, chip10Display, chip25Display, chip100Display;\r\n  \r\n    if(green.indexOf(props.betValue)>-1 && props.betAmount === 1){\r\n      chip1Display = (<img className=\"chip__small\" src={chip1green} alt=\"chip1\"/>)\r\n    } else if(red.indexOf(props.betValue)>-1 && props.betAmount === 1){\r\n      chip1Display = (<img className=\"chip__small\" src={chip1red} alt=\"chip1\"/>)\r\n    } else if(black.indexOf(props.betValue)>-1 && props.betAmount === 1){\r\n      chip1Display = (<img className=\"chip__small\" src={chip1black} alt=\"chip1\"/>)\r\n    }\r\n  \r\n    if(green.indexOf(props.betValue)>-1 && props.betAmount === 5){\r\n      chip5Display = (<img className=\"chip__small\" src={chip5green} alt=\"chip1\"/>)\r\n    } else if(red.indexOf(props.betValue)>-1 && props.betAmount === 5){\r\n      chip5Display = (<img className=\"chip__small\" src={chip5red} alt=\"chip1\"/>)\r\n    } else if(black.indexOf(props.betValue)>-1 && props.betAmount === 5){\r\n      chip5Display = (<img className=\"chip__small\" src={chip5black} alt=\"chip1\"/>)\r\n    }\r\n  \r\n    if(green.indexOf(props.betValue)>-1 && props.betAmount === 10){\r\n      chip10Display = (<img className=\"chip__small\" src={chip10green} alt=\"chip1\"/>)\r\n    } else if(red.indexOf(props.betValue)>-1 && props.betAmount === 10){\r\n      chip10Display = (<img className=\"chip__small\" src={chip10red} alt=\"chip1\"/>)\r\n    } else if(black.indexOf(props.betValue)>-1 && props.betAmount === 10){\r\n      chip10Display = (<img className=\"chip__small\" src={chip10black} alt=\"chip1\"/>)\r\n    }\r\n  \r\n    if(green.indexOf(props.betValue)>-1 && props.betAmount === 25){\r\n      chip25Display = (<img className=\"chip__small\" src={chip25green} alt=\"chip1\"/>)\r\n    } else if(red.indexOf(props.betValue)>-1 && props.betAmount === 25){\r\n      chip25Display = (<img className=\"chip__small\" src={chip25red} alt=\"chip1\"/>)\r\n    } else if(black.indexOf(props.betValue)>-1 && props.betAmount === 25){\r\n      chip25Display = (<img className=\"chip__small\" src={chip25black} alt=\"chip1\"/>)\r\n    }\r\n  \r\n    if(green.indexOf(props.betValue)>-1 && props.betAmount === 100){\r\n      chip100Display = (<img className=\"chip__small\" src={chip100green} alt=\"chip1\"/>)\r\n    } else if(red.indexOf(props.betValue)>-1 && props.betAmount === 100){\r\n      chip100Display = (<img className=\"chip__small\" src={chip100red} alt=\"chip1\"/>)\r\n    } else if(black.indexOf(props.betValue)>-1 && props.betAmount === 100){\r\n      chip100Display = (<img className=\"chip__small\" src={chip100black} alt=\"chip1\"/>)\r\n    }\r\n  \r\n    let redValue = (red.indexOf(props.betValue)>-1) ?\r\n    <div className={props.betSelected===props.betValue ? \"selected board-number red\" : \"board-number red\"} onClick={()=>props.selectBetHandler(props.betValue)}>\r\n    {props.betValue}{chip1Display}{chip5Display}{chip10Display}{chip25Display}{chip100Display}\r\n    </div> : null\r\n  \r\n    let blackValue = (black.indexOf(props.betValue)>-1) ?\r\n    <div className={props.betSelected===props.betValue ? \"selected board-number black\" : \"board-number black\"} onClick={()=>props.selectBetHandler(props.betValue)}>\r\n    {props.betValue}{chip1Display}{chip5Display}{chip10Display}{chip25Display}{chip100Display}\r\n    </div> : null\r\n  \r\n    let greenSmallValue = (greenSmall.indexOf(props.betValue)>-1) ?\r\n    <div className={props.betSelected===props.betValue ? \"selected row-bet\" : \"row-bet\"} onClick={()=>props.selectBetHandler(props.betValue)}>\r\n    {props.betValue}{chip1Display}{chip5Display}{chip10Display}{chip25Display}{chip100Display}\r\n    </div> : null\r\n  \r\n    let greenMiddleValue = (greenMiddle.indexOf(props.betValue)>-1) ?\r\n    <div className={props.betSelected===props.betValue ? \"selected one-of-two-bet\" : \"one-of-two-bet\"} onClick={()=>props.selectBetHandler(props.betValue)}>\r\n    <span className=\"one-of-two-bet__height\">{props.betValue}</span>{chip1Display}{chip5Display}{chip10Display}{chip25Display}{chip100Display}\r\n    </div> : null\r\n  \r\n    let greenLargeValue = (greenLarge.indexOf(props.betValue)>-1) ?\r\n    <div className={props.betSelected===props.betValue ? \"selected thirds-bet\" : \"thirds-bet\"} onClick={()=>props.selectBetHandler(props.betValue)}>\r\n    <span className=\"thirds-bet__height\">{props.betValue}</span>{chip1Display}{chip5Display}{chip10Display}{chip25Display}{chip100Display}\r\n    </div> : null\r\n  \r\n    let zeroBetValue = (props.betValue === 0 || props.betValue === '0') ?\r\n    <div className={props.betSelected===props.betValue ? \"selected__zero zero__bet\" : \"zero__bet\"} onClick={()=>props.selectBetHandler(props.betValue)}>\r\n    {props.betValue}{chip1Display}{chip5Display}{chip10Display}{chip25Display}{chip100Display}\r\n    </div> : null\r\n  \r\n  \r\n    return(\r\n      <div className=\"board__chips\">\r\n        {redValue}{blackValue}{greenSmallValue}{greenMiddleValue}{greenLargeValue}{zeroBetValue}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n  export default Slot;","import React from 'react';\r\n\r\nimport Slot from '../Slot/Slot';\r\n\r\nconst Table = (props) => {\r\n    let topRow = [3,6,9,12,15,18,21,24,27,30,33,36, \"3rd row\"];\r\n      let topRowBets = topRow.map((item)=> {\r\n        let betMap = props.betMap;\r\n        let current = null;\r\n        betMap.forEach((bet)=>{\r\n          if(bet.value === item){\r\n            current = bet.currentBet;\r\n          }\r\n        })\r\n        return current;\r\n      })\r\n  \r\n      let middleRow = [2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, '2nd row'];\r\n      let middleRowBets = middleRow.map((item)=> {\r\n        let betMap = props.betMap;\r\n        let current = null;\r\n        betMap.forEach((bet)=>{\r\n          if(bet.value === item){\r\n            current = bet.currentBet;\r\n          }\r\n        })\r\n        return current;\r\n      })\r\n  \r\n      let bottomRow = [1,4,7, 10, 13, 16, 19, 22, 25, 28, 31, 34, '1st row'];\r\n      let bottomRowBets = bottomRow.map((item)=> {\r\n        let betMap = props.betMap;\r\n        let current = null;\r\n        betMap.forEach((bet)=>{\r\n          if(bet.value === item){\r\n            current = bet.currentBet;\r\n          }\r\n        })\r\n        return current;\r\n      })\r\n  \r\n      let sideLineTop = ['1st 12', '2nd 12', '3rd 12'];\r\n      let sideLineTopBets = sideLineTop.map((item)=> {\r\n        let betMap = props.betMap;\r\n        let current = null;\r\n        betMap.forEach((bet)=>{\r\n          if(bet.value === item){\r\n            current = bet.currentBet;\r\n          }\r\n        })\r\n        return current;\r\n      })\r\n  \r\n      let sideLineBot = ['1-18', 'EVEN', 'Red', 'Black', 'ODD', '19-36'];\r\n      let sideLineBotBets = sideLineBot.map((item)=> {\r\n        let betMap = props.betMap;\r\n        let current = null;\r\n        betMap.forEach((bet)=>{\r\n          if(bet.value === item){\r\n            current = bet.currentBet;\r\n          }\r\n        })\r\n        return current;\r\n      })\r\n  \r\n      let zeroLine = [0];\r\n      let zeroLineBets = zeroLine.map((item)=> {\r\n        let betMap = props.betMap;\r\n        let current = null;\r\n        betMap.forEach((bet)=>{\r\n          if(bet.value === item){\r\n            current = bet.currentBet;\r\n          }\r\n        })\r\n        return current;\r\n      })\r\n    \r\n   \r\n    return(\r\n      <div>\r\n        <div className=\"board\">\r\n            \r\n  \r\n            <div>\r\n              <Slot \r\n                betValue={0}\r\n                betSelected = {props.betSelected}\r\n                selectBetHandler = {props.selectBetHandler}\r\n                betAmount = {zeroLineBets[0]}\r\n              />\r\n            </div>\r\n            <div className=\"topthree__rows\">\r\n              <div className=\"top-row\">\r\n                  {topRow.map((bet, index)=><Slot \r\n                    key={bet}\r\n                    betValue = {bet}\r\n                    betSelected = {props.betSelected}\r\n                    selectBetHandler = {props.selectBetHandler}\r\n                    betAmount= {topRowBets[index]}\r\n                  />)}\r\n                </div>\r\n                <div className=\"middle-row\">\r\n                  {middleRow.map((bet, index)=><Slot \r\n                    key={bet}\r\n                    betValue = {bet}\r\n                    betSelected = {props.betSelected}\r\n                    selectBetHandler = {props.selectBetHandler}\r\n                    betAmount= {middleRowBets[index]}\r\n                  />)}\r\n                </div>\r\n                <div className=\"bottom-row\">\r\n                  {bottomRow.map((bet, index)=><Slot \r\n                    key={bet}\r\n                    betValue = {bet}\r\n                    betSelected = {props.betSelected}\r\n                    selectBetHandler = {props.selectBetHandler}\r\n                    betAmount= {bottomRowBets[index]}\r\n                  />)}\r\n                </div>\r\n            </div>\r\n                \r\n                <div className=\"side-line-1\">\r\n                  {sideLineTop.map((bet, index)=><Slot \r\n                    key={bet}\r\n                    betValue = {bet}\r\n                    betSelected = {props.betSelected}\r\n                    selectBetHandler = {props.selectBetHandler}\r\n                    betAmount= {sideLineTopBets[index]}\r\n                  />)}\r\n                </div>\r\n                <div className=\"side-line-2\">\r\n                {sideLineBot.map((bet, index)=><Slot \r\n                    key={bet}\r\n                    betValue = {bet}\r\n                    betSelected = {props.betSelected}\r\n                    selectBetHandler = {props.selectBetHandler}\r\n                    betAmount= {sideLineBotBets[index]}\r\n                  />)}\r\n                </div>\r\n              </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Table;","import React, { Component } from 'react';\nimport './style.scss';\n\nimport Stats from './Stats/Stats';\nimport Table from './Table/Table';\nimport chip1 from './img/chip1background.jpg';\nimport chip5 from './img/chip5background.jpg';\nimport chip10 from './img/chip10background.jpg';\nimport chip25 from './img/chip25background.jpg';\nimport chip100 from './img/chip100background.jpg';\n\nimport Wheel from './img/wheel.jpg';\n\nclass App extends Component {\n\n  state = {\n    playerAmount: 500,\n    betMap: [],\n    spinResult: \"\",\n    betResult: \"\",\n    chipSelected: null,\n    currentTotalBet: 0,\n    lastSpin: null,\n    lastResult: null,\n    lastWinMessages: []\n  }\n\n  selectBetHandler = (bet) => {\n      let betMap = Object.assign([], this.state.betMap);\n      let chipSelected = this.state.chipSelected;\n      let playerAmount = this.state.playerAmount;\n      let totalBet = this.state.currentTotalBet;\n      let remaining = playerAmount - totalBet;\n\n      betMap.forEach(function(obj){\n        if(obj.value === bet && obj.currentBet === null && remaining >= chipSelected){\n          if(playerAmount >= chipSelected){\n            obj.currentBet = chipSelected;\n            totalBet += chipSelected;\n          }\n        } else if(obj.value === bet && obj.currentBet !== chipSelected){\n          totalBet-=obj.currentBet;\n          obj.currentBet = null;\n          \n        } else if(obj.value === bet && obj.currentBet === chipSelected){\n          obj.currentBet = null;\n          totalBet-= chipSelected;\n        }\n      })\n   \n    \n    this.setState(()=>({betMap, currentTotalBet: totalBet, playerAmount: playerAmount}));\n  }\n\n\n  selectChipHandler = (bet) => {\n    let chip;\n    if(this.state.chipSelected === null || this.state.chipSelected !==bet){\n      chip = bet;\n    } else if(this.state.chipSelected === bet){\n      chip = null;\n    } \n    this.setState(()=>({chipSelected: chip}));\n  }\n\n  populateBetsHandler = () => {\n    //define arrays for bet label, and object array\n    let betMapArray = [];\n    let numberBets = [];\n    let betMap = [];\n    \n    //create array of all bet labels\n    for(let i = 0; i<=36 ; i++){\n      numberBets.push(i);\n    }\n    let wordBets = ['3rd row', '2nd row', '1st row', '1st 12', '2nd 12', '3rd 12', '1-18', 'EVEN', 'Red', 'Black', 'ODD', '19-36'];\n    betMapArray = numberBets.concat(wordBets);\n    \n    //constructor for bet slot objects, push to array\n    function Slot(value, currentBet){\n      this.value = value;\n      this.currentBet = currentBet;\n    }\n    for(let i=0; i<betMapArray.length;i++){\n        let betInstance = new Slot(betMapArray[i], null);\n        betMap.push(betInstance);\n    }\n\n    this.setState(()=>({betMap, chipSelected: null}));\n  }\n\n  componentDidMount = () => {\n    this.populateBetsHandler();\n  }\n\n  clearBetsHandler = () => {\n    this.setState(()=>({currentTotalBet: 0}));\n    this.populateBetsHandler();\n  }\n\n  spinWheelHandler = () => {\n      let playerAmount = this.state.playerAmount;\n      let startingAmount = this.state.playerAmount;\n      let totalBet = this.state.currentTotalBet;\n      let betMap = this.state.betMap;\n      let winnings = 0;\n      let winMessages = [];\n\n      let spin = Math.floor(Math.random()*37);\n      let activeBets = betMap.filter((slot)=>slot.currentBet);\n      \n      if(totalBet > playerAmount){\n        return console.log('not enough to play');\n      } \n\n      playerAmount-=totalBet;\n        \n      let topRow = [3,6,9,12,15,18,21,24,27,30,33,36, '3rd row'];\n      let middleRow = [2,5,8,11,14,17,20,23,26,29,32,35, '2nd row'];\n      let bottomRow = [1,4,7,10,13,16,19,22,25,28,31,34, '1st row'];\n      let red = [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36];\n      let black = [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35];\n      let even = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36];\n      let odd = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35];\n      let firstHalf = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n      let secondHalf = [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36];\n      let firstThird = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n      let secondThird = [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24];\n      let thirdThird = [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36];\n\n      activeBets.forEach((bet)=>{\n        \n        if(bet.value > 0 && bet.value === spin){\n          winnings += (36*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*36} on ${bet.value}`)\n        } else if(bet.value === 0 && spin === 0){\n          winnings += (36*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*36} on ${bet.value}`);\n        } else if(bet.value === '3rd row' && topRow.indexOf(spin)>-1){\n          winnings += (3*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*3} on ${bet.value}`);\n        } else if(bet.value === '2nd row' && middleRow.indexOf(spin)>-1){\n          winnings += (3*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*3} on ${bet.value}`);\n        } else if(bet.value === '1st row' && bottomRow.indexOf(spin)>-1){\n          winnings += (3*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*3} on ${bet.value}`);\n        } else if(bet.value === 'Red' && red.indexOf(spin)>-1){\n          winnings += (2*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*2} on ${bet.value}`);\n        } else if(bet.value === 'Black' && black.indexOf(spin)>-1){\n          winnings += (2*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*2} on ${bet.value}`);\n        } else if(bet.value === 'EVEN' && even.indexOf(spin)>-1){\n          winnings += (2*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*2} on ${bet.value}`);\n        } else if(bet.value === 'ODD' && odd.indexOf(spin)>-1){\n          winnings += (2*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*2} on ${bet.value}`);\n        } else if(bet.value === \"1st 12\" && firstThird.indexOf(spin)>-1){\n          winnings += (3*(bet.currentBet));\n          winMessages.push(`You won $${(bet.currentBet)*3} on ${bet.value}`);\n        } else if(bet.value === \"2nd 12\" && secondThird.indexOf(spin)>-1){\n          winnings += (3*(bet.currentBet));\n          winMessages.push(`You won $${(bet.currentBet)*3} on ${bet.value}`);\n        } else if(bet.value === \"3rd 12\" && thirdThird.indexOf(spin)>-1){\n          winnings += (3*(bet.currentBet));\n          winMessages.push(`You won $${(bet.currentBet)*3} on ${bet.value}`);\n        } else if(bet.value === '1-18' && firstHalf.indexOf(spin)>-1){\n          winnings += (2*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*2} on ${bet.value}`);\n        } else if(bet.value === '19-36' && secondHalf.indexOf(spin)>-1){\n          winnings += (2*bet.currentBet);\n          winMessages.push(`You won $${(bet.currentBet)*2} on ${bet.value}`);\n        } \n        \n        playerAmount+=winnings;\n        let difference = playerAmount-startingAmount;\n        winnings = 0;\n      \n        this.setState(()=>({playerAmount, lastSpin: spin, lastResult: difference, lastWinMessages: winMessages}))\n      });\n  }\n\n  render() {   \n   let numbers = [];\n   for(let i = 0 ; i <37; i++) {numbers.push(i)};\n\n    return (\n      <div className=\"App\">\n        \n        <h1 className=\"header\">Roulette</h1>\n        \n        <div className=\"screen\">\n          <div className=\"game\">\n            <div className=\"display\">\n              <Stats\n                playerAmount = {this.state.playerAmount}\n                currentTotalBet = {this.state.currentTotalBet}\n                lastResult = {this.state.lastResult}\n                lastWinMessages = {this.state.lastWinMessages}\n                lastSpin = {this.state.lastSpin}\n              />\n              <Table \n                lastSpin = {this.state.lastSpin}\n                betSelected = {this.state.betSelected}\n                selectBetHandler = {this.selectBetHandler}\n                betMap = {this.state.betMap}\n              />\n            </div>\n            \n            <div className=\"bet__options\">\n              <div className=\"bet__options--label\">Select bet: </div>\n              <div className={this.state.chipSelected===100 ? \"bet__chips bet__selected\" : \"bet__chips\"} onClick={()=>this.selectChipHandler(100)}><img className=\"bet__image\" src={chip100} alt=\"100 chip\"/></div>\n              <div className={this.state.chipSelected===25 ? \"bet__chips bet__selected\" : \"bet__chips\"} onClick={()=>this.selectChipHandler(25)}><img className=\"bet__image\" src={chip25} alt=\"25 chip\"/></div>\n              <div className={this.state.chipSelected===10 ? \"bet__chips bet__selected\" : \"bet__chips\"} onClick={()=>this.selectChipHandler(10)}><img className=\"bet__image\" src={chip10} alt=\"10 chip\"/></div>\n              <div className={this.state.chipSelected===5 ? \"bet__chips bet__selected\" : \"bet__chips\"} onClick={()=>this.selectChipHandler(5)}><img className=\"bet__image\" src={chip5} alt=\"5 chip\"/></div>\n              <div className={this.state.chipSelected===1 ? \"bet__chips bet__selected\" : \"bet__chips\"} onClick={()=>this.selectChipHandler(1)}><img className=\"bet__image\" src={chip1} alt=\"1 chip\"/></div>\n            </div>\n            <button className=\"button\" onClick={()=>this.clearBetsHandler()}>Clear bets</button>\n            <button className=\"button\" onClick={()=>this.spinWheelHandler()}>Spin</button>\n          </div>\n          <div className=\"wheel__display\">\n            <img className=\"wheel__image\" src={Wheel} alt=\"wheel\"/>\n            {numbers.map((num)=><ResultBall\n              key = {num}\n              number = {num}\n              lastSpin = {this.state.lastSpin}\n              \n            />)}\n          </div>\n          \n        </div>\n        \n      </div>\n    ); \n  }\n}\n\n\n\n\n\nconst ResultBall = (props) => {\n  let classname;\n  if(props.lastSpin === props.number){\n    classname = `ball ball__${props.number}`;\n  }\n  \n  \n  return(\n    <div className={classname}>\n      \n    </div>\n  );\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}